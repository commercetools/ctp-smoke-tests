version: 2.1

aliases:
  - &working_directory ~/ctp-smoke-tests

  - &save-git-cache
    key: source-v1-{{ .Branch }}-{{ .Revision }}
    paths:
      - ".git"

  - &restore-git-cache
    keys:
      - source-v1-{{ .Branch }}-{{ .Revision }}
      - source-v1-{{ .Branch }}-
      - source-v1-

  - &save-sbt-cache
    key: sbt-cache
    paths:
      - "~/.cache/coursier"
      - "~/.sbt"
      - "~/.ivy2/cache"
      - "~/.m2"

  - &restore-sbt-cache
    keys:
      - sbt-cache

executors:
  sbt-executor:
    docker:
      - image: openlaw/scala-builder
    working_directory: *working_directory

  docker-executor:
    docker:
      - image: gcr.io/cloud-builders/docker
    working_directory: *working_directory

commands:
  login-google-docker-registry:
    description: "Login to GCP docker registry access"
    steps:
      - run: echo $DOCKER_REGISTRY_KEY | base64 --decode > gcloud-service-key.json
      - run: docker login -u _json_key -p "$(cat gcloud-service-key.json)" https://gcr.io

  before_cache:
    description: "Avoid unnecessary cache updates"
    steps:
      - run:
          name: Before caching cleanup
          command: |
            rm -fv $HOME/.ivy2/.sbt.ivy.lock
            find   $HOME/.ivy2/cache -name "ivydata-*.properties" -print -delete
            find   $HOME/.sbt        -name "*.lock"               -print -delete

  build_and_push_docker:
    description: "Build & push docker container"
    parameters:
      path:
        type: string
      container_name:
        type: string
    steps:
      - run: echo 'export DOCKER_TAG_NAME=`echo ${CIRCLE_BRANCH} | tr '/' '-'`' >> $BASH_ENV
      - run:
          name: Build << parameters.container_name >> docker container
          command: |
            set -e
            cd << parameters.path >>
            # The tag "latest" will always contain the last build artifacts
            docker build -t gcr.io/ct-images/<< parameters.container_name >>:${CIRCLE_SHA1} -t gcr.io/ct-images/<< parameters.container_name >>:${DOCKER_TAG_NAME} .
            docker push gcr.io/ct-images/<< parameters.container_name >>


jobs:
  smoke_tests:
    executor: sbt-executor
    steps:
      - checkout
      - restore_cache: *restore-git-cache
      - restore_cache: *restore-sbt-cache
      - run:
          name: Smoke tests
          command: sbt -Dfatal-warnings=true -Dscalac-optimize=true clean scalafmtCheckAll test docker:stage exit
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex "./target/test-reports/TEST-.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
      - before_cache
      - save_cache: *save-git-cache
      - save_cache: *save-sbt-cache
      - persist_to_workspace:
          root: ~/ctp-smoke-tests
          paths:
            - target/docker/stage/

  push_docker_image:
    executor: docker-executor
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ~/ctp-smoke-tests
      - login-google-docker-registry
      - build_and_push_docker:
          path: ~/ctp-smoke-tests/target/docker/stage/
          container_name: ctp-smoke-tests

workflows:
  version: 2.1
  build:
    jobs:
      - smoke_tests
      - push_docker_image:
          requires:
            - smoke_tests

